//
//  DilloDayStyleKit.m
//  DilloDay
//
//  Created by Philip Meyers IV on 2/8/15.
//  Copyright (c) 2015 Mayfest. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "DilloDayStyleKit.h"


@implementation DilloDayStyleKit

#pragma mark Cache

static UIImage* _imageOfDilloLogo = nil;

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawDilloLogo
{
    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];
    UIColor* dilloLogoColor = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];

    //// Dillo
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(1.04, 0)];
        [bezier2Path addCurveToPoint: CGPointMake(210.04, 0) controlPoint1: CGPointMake(70.71, 0) controlPoint2: CGPointMake(140.38, 0)];
        [bezier2Path addCurveToPoint: CGPointMake(210.04, 176) controlPoint1: CGPointMake(210.04, 58.67) controlPoint2: CGPointMake(210.04, 117.33)];
        [bezier2Path addCurveToPoint: CGPointMake(0.04, 176) controlPoint1: CGPointMake(140.04, 176) controlPoint2: CGPointMake(70.05, 176)];
        [bezier2Path addCurveToPoint: CGPointMake(0.04, 3) controlPoint1: CGPointMake(0.04, 118.33) controlPoint2: CGPointMake(0.04, 60.67)];
        [bezier2Path addCurveToPoint: CGPointMake(1.04, 0) controlPoint1: CGPointMake(-0.04, 1.58) controlPoint2: CGPointMake(-0.12, 0.17)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(155.04, 78)];
        [bezier2Path addCurveToPoint: CGPointMake(148.04, 56) controlPoint1: CGPointMake(156.16, 68.08) controlPoint2: CGPointMake(148, 67.56)];
        [bezier2Path addCurveToPoint: CGPointMake(156.04, 33) controlPoint1: CGPointMake(148.08, 46.86) controlPoint2: CGPointMake(157.17, 39.74)];
        [bezier2Path addCurveToPoint: CGPointMake(127.04, 13) controlPoint1: CGPointMake(154.6, 24.33) controlPoint2: CGPointMake(132.85, 15.3)];
        [bezier2Path addCurveToPoint: CGPointMake(85.04, 6) controlPoint1: CGPointMake(115.3, 8.35) controlPoint2: CGPointMake(98.32, 5.26)];
        [bezier2Path addCurveToPoint: CGPointMake(22.04, 115) controlPoint1: CGPointMake(46.74, 8.12) controlPoint2: CGPointMake(-8.16, 66.2)];
        [bezier2Path addCurveToPoint: CGPointMake(54.04, 138) controlPoint1: CGPointMake(25.52, 120.61) controlPoint2: CGPointMake(43.86, 138.22)];
        [bezier2Path addCurveToPoint: CGPointMake(95.04, 99) controlPoint1: CGPointMake(69.11, 137.68) controlPoint2: CGPointMake(88.16, 111.52)];
        [bezier2Path addCurveToPoint: CGPointMake(155.04, 78) controlPoint1: CGPointMake(114.59, 110.03) controlPoint2: CGPointMake(153.27, 93.77)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(176.04, 47)];
        [bezier2Path addCurveToPoint: CGPointMake(184.04, 62) controlPoint1: CGPointMake(179.16, 51.55) controlPoint2: CGPointMake(179.96, 58.42)];
        [bezier2Path addCurveToPoint: CGPointMake(180.04, 37) controlPoint1: CGPointMake(189.51, 56.54) controlPoint2: CGPointMake(190.51, 37.61)];
        [bezier2Path addCurveToPoint: CGPointMake(176.04, 47) controlPoint1: CGPointMake(180.25, 41.88) controlPoint2: CGPointMake(175.94, 42.23)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(196.04, 113)];
        [bezier2Path addCurveToPoint: CGPointMake(190.04, 97) controlPoint1: CGPointMake(196.69, 108.66) controlPoint2: CGPointMake(190.8, 104.22)];
        [bezier2Path addCurveToPoint: CGPointMake(193.04, 76) controlPoint1: CGPointMake(189.31, 90) controlPoint2: CGPointMake(194.35, 81.51)];
        [bezier2Path addCurveToPoint: CGPointMake(179.04, 63) controlPoint1: CGPointMake(191.14, 68) controlPoint2: CGPointMake(180.41, 67.16)];
        [bezier2Path addCurveToPoint: CGPointMake(159.04, 38) controlPoint1: CGPointMake(176.11, 50.93) controlPoint2: CGPointMake(170.08, 41.97)];
        [bezier2Path addCurveToPoint: CGPointMake(153.04, 61) controlPoint1: CGPointMake(154.92, 46.08) controlPoint2: CGPointMake(150.27, 50.33)];
        [bezier2Path addCurveToPoint: CGPointMake(165.04, 79) controlPoint1: CGPointMake(155.01, 68.55) controlPoint2: CGPointMake(164.82, 72.51)];
        [bezier2Path addCurveToPoint: CGPointMake(159.04, 97) controlPoint1: CGPointMake(165.27, 85.41) controlPoint2: CGPointMake(157.77, 90.72)];
        [bezier2Path addCurveToPoint: CGPointMake(170.04, 106) controlPoint1: CGPointMake(160.13, 102.35) controlPoint2: CGPointMake(166.78, 103.56)];
        [bezier2Path addCurveToPoint: CGPointMake(196.04, 113) controlPoint1: CGPointMake(169.86, 120.61) controlPoint2: CGPointMake(193.89, 127.61)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(137.04, 99)];
        [bezier2Path addCurveToPoint: CGPointMake(147.04, 118) controlPoint1: CGPointMake(137.04, 108.67) controlPoint2: CGPointMake(140.15, 115.23)];
        [bezier2Path addCurveToPoint: CGPointMake(154.04, 112) controlPoint1: CGPointMake(148.1, 114.72) controlPoint2: CGPointMake(147.78, 110.07)];
        [bezier2Path addCurveToPoint: CGPointMake(161.04, 107) controlPoint1: CGPointMake(152.34, 106.29) controlPoint2: CGPointMake(156.67, 106.63)];
        [bezier2Path addCurveToPoint: CGPointMake(151.04, 88) controlPoint1: CGPointMake(159.69, 102.52) controlPoint2: CGPointMake(154.59, 93.58)];
        [bezier2Path addCurveToPoint: CGPointMake(137.04, 99) controlPoint1: CGPointMake(147.28, 92.57) controlPoint2: CGPointMake(141.03, 94.66)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(103.04, 105)];
        [bezier2Path addCurveToPoint: CGPointMake(122.04, 132) controlPoint1: CGPointMake(110.37, 113.01) controlPoint2: CGPointMake(119.61, 119.11)];
        [bezier2Path addCurveToPoint: CGPointMake(127.04, 126) controlPoint1: CGPointMake(123.75, 130.04) controlPoint2: CGPointMake(124.38, 127)];
        [bezier2Path addCurveToPoint: CGPointMake(131.04, 128) controlPoint1: CGPointMake(129.03, 126.01) controlPoint2: CGPointMake(128.31, 128.73)];
        [bezier2Path addCurveToPoint: CGPointMake(142.04, 122) controlPoint1: CGPointMake(132.11, 123.4) controlPoint2: CGPointMake(135.11, 120.74)];
        [bezier2Path addCurveToPoint: CGPointMake(135.04, 101) controlPoint1: CGPointMake(139.7, 115.01) controlPoint2: CGPointMake(134.51, 110.87)];
        [bezier2Path addCurveToPoint: CGPointMake(103.04, 105) controlPoint1: CGPointMake(125.72, 103.89) controlPoint2: CGPointMake(114.8, 107.5)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(74.04, 132)];
        [bezier2Path addCurveToPoint: CGPointMake(99.04, 140) controlPoint1: CGPointMake(85.39, 131.65) controlPoint2: CGPointMake(92.81, 135.23)];
        [bezier2Path addCurveToPoint: CGPointMake(102.04, 134) controlPoint1: CGPointMake(100.43, 138.39) controlPoint2: CGPointMake(99.89, 134.85)];
        [bezier2Path addCurveToPoint: CGPointMake(109.04, 138) controlPoint1: CGPointMake(104.63, 135.07) controlPoint2: CGPointMake(105.76, 137.62)];
        [bezier2Path addCurveToPoint: CGPointMake(110.04, 131) controlPoint1: CGPointMake(109.64, 135.93) controlPoint2: CGPointMake(107.81, 131.43)];
        [bezier2Path addCurveToPoint: CGPointMake(118.04, 133) controlPoint1: CGPointMake(113.22, 131.15) controlPoint2: CGPointMake(114.44, 133.27)];
        [bezier2Path addCurveToPoint: CGPointMake(96.04, 104) controlPoint1: CGPointMake(118.88, 115.16) controlPoint2: CGPointMake(102.53, 114.51)];
        [bezier2Path addCurveToPoint: CGPointMake(74.04, 132) controlPoint1: CGPointMake(90.28, 114.9) controlPoint2: CGPointMake(80.85, 122.14)];
        [bezier2Path closePath];
        [bezier2Path moveToPoint: CGPointMake(165.04, 110)];
        [bezier2Path addCurveToPoint: CGPointMake(68.04, 136) controlPoint1: CGPointMake(149.49, 135.7) controlPoint2: CGPointMake(102.65, 156.41)];
        [bezier2Path addCurveToPoint: CGPointMake(29.04, 130) controlPoint1: CGPointMake(55.6, 148.42) controlPoint2: CGPointMake(39.94, 137.82)];
        [bezier2Path addCurveToPoint: CGPointMake(165.04, 130) controlPoint1: CGPointMake(49.35, 187.83) controlPoint2: CGPointMake(140.35, 173.97)];
        [bezier2Path addCurveToPoint: CGPointMake(166.04, 110) controlPoint1: CGPointMake(167.89, 124.94) controlPoint2: CGPointMake(175.22, 114.83)];
        [bezier2Path addCurveToPoint: CGPointMake(165.04, 110) controlPoint1: CGPointMake(165.71, 110) controlPoint2: CGPointMake(165.38, 110)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        bezier2Path.usesEvenOddFillRule = YES;

        [color0 setFill];
        [bezier2Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(95.04, 99)];
        [bezier4Path addCurveToPoint: CGPointMake(54.04, 138) controlPoint1: CGPointMake(88.16, 111.52) controlPoint2: CGPointMake(69.11, 137.68)];
        [bezier4Path addCurveToPoint: CGPointMake(22.04, 115) controlPoint1: CGPointMake(43.86, 138.22) controlPoint2: CGPointMake(25.52, 120.61)];
        [bezier4Path addCurveToPoint: CGPointMake(85.04, 6) controlPoint1: CGPointMake(-8.16, 66.2) controlPoint2: CGPointMake(46.74, 8.12)];
        [bezier4Path addCurveToPoint: CGPointMake(127.04, 13) controlPoint1: CGPointMake(98.31, 5.26) controlPoint2: CGPointMake(115.3, 8.35)];
        [bezier4Path addCurveToPoint: CGPointMake(156.04, 33) controlPoint1: CGPointMake(132.85, 15.3) controlPoint2: CGPointMake(154.6, 24.33)];
        [bezier4Path addCurveToPoint: CGPointMake(148.04, 56) controlPoint1: CGPointMake(157.16, 39.74) controlPoint2: CGPointMake(148.08, 46.86)];
        [bezier4Path addCurveToPoint: CGPointMake(155.04, 78) controlPoint1: CGPointMake(148, 67.56) controlPoint2: CGPointMake(156.16, 68.08)];
        [bezier4Path addCurveToPoint: CGPointMake(95.04, 99) controlPoint1: CGPointMake(153.27, 93.77) controlPoint2: CGPointMake(114.59, 110.03)];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        bezier4Path.usesEvenOddFillRule = YES;

        [dilloLogoColor setFill];
        [bezier4Path fill];


        //// Bezier 6 Drawing
        UIBezierPath* bezier6Path = UIBezierPath.bezierPath;
        [bezier6Path moveToPoint: CGPointMake(180.04, 37)];
        [bezier6Path addCurveToPoint: CGPointMake(184.04, 62) controlPoint1: CGPointMake(190.51, 37.61) controlPoint2: CGPointMake(189.51, 56.54)];
        [bezier6Path addCurveToPoint: CGPointMake(176.04, 47) controlPoint1: CGPointMake(179.96, 58.42) controlPoint2: CGPointMake(179.16, 51.55)];
        [bezier6Path addCurveToPoint: CGPointMake(180.04, 37) controlPoint1: CGPointMake(175.94, 42.23) controlPoint2: CGPointMake(180.25, 41.88)];
        [bezier6Path closePath];
        bezier6Path.miterLimit = 4;

        bezier6Path.usesEvenOddFillRule = YES;

        [dilloLogoColor setFill];
        [bezier6Path fill];


        //// Bezier 8 Drawing
        UIBezierPath* bezier8Path = UIBezierPath.bezierPath;
        [bezier8Path moveToPoint: CGPointMake(170.04, 106)];
        [bezier8Path addCurveToPoint: CGPointMake(159.04, 97) controlPoint1: CGPointMake(166.78, 103.56) controlPoint2: CGPointMake(160.13, 102.35)];
        [bezier8Path addCurveToPoint: CGPointMake(165.04, 79) controlPoint1: CGPointMake(157.77, 90.72) controlPoint2: CGPointMake(165.27, 85.41)];
        [bezier8Path addCurveToPoint: CGPointMake(153.04, 61) controlPoint1: CGPointMake(164.82, 72.51) controlPoint2: CGPointMake(155.01, 68.55)];
        [bezier8Path addCurveToPoint: CGPointMake(159.04, 38) controlPoint1: CGPointMake(150.27, 50.33) controlPoint2: CGPointMake(154.92, 46.08)];
        [bezier8Path addCurveToPoint: CGPointMake(179.04, 63) controlPoint1: CGPointMake(170.08, 41.97) controlPoint2: CGPointMake(176.11, 50.93)];
        [bezier8Path addCurveToPoint: CGPointMake(193.04, 76) controlPoint1: CGPointMake(180.41, 67.17) controlPoint2: CGPointMake(191.14, 68)];
        [bezier8Path addCurveToPoint: CGPointMake(190.04, 97) controlPoint1: CGPointMake(194.35, 81.51) controlPoint2: CGPointMake(189.31, 90)];
        [bezier8Path addCurveToPoint: CGPointMake(196.04, 113) controlPoint1: CGPointMake(190.8, 104.22) controlPoint2: CGPointMake(196.69, 108.66)];
        [bezier8Path addCurveToPoint: CGPointMake(170.04, 106) controlPoint1: CGPointMake(193.89, 127.61) controlPoint2: CGPointMake(169.86, 120.61)];
        [bezier8Path closePath];
        bezier8Path.miterLimit = 4;

        bezier8Path.usesEvenOddFillRule = YES;

        [dilloLogoColor setFill];
        [bezier8Path fill];


        //// Bezier 10 Drawing
        UIBezierPath* bezier10Path = UIBezierPath.bezierPath;
        [bezier10Path moveToPoint: CGPointMake(151.04, 88)];
        [bezier10Path addCurveToPoint: CGPointMake(161.04, 107) controlPoint1: CGPointMake(154.59, 93.58) controlPoint2: CGPointMake(159.69, 102.52)];
        [bezier10Path addCurveToPoint: CGPointMake(154.04, 112) controlPoint1: CGPointMake(156.67, 106.63) controlPoint2: CGPointMake(152.34, 106.29)];
        [bezier10Path addCurveToPoint: CGPointMake(147.04, 118) controlPoint1: CGPointMake(147.78, 110.07) controlPoint2: CGPointMake(148.1, 114.72)];
        [bezier10Path addCurveToPoint: CGPointMake(137.04, 99) controlPoint1: CGPointMake(140.15, 115.23) controlPoint2: CGPointMake(137.04, 108.67)];
        [bezier10Path addCurveToPoint: CGPointMake(151.04, 88) controlPoint1: CGPointMake(141.03, 94.66) controlPoint2: CGPointMake(147.28, 92.57)];
        [bezier10Path closePath];
        bezier10Path.miterLimit = 4;

        bezier10Path.usesEvenOddFillRule = YES;

        [dilloLogoColor setFill];
        [bezier10Path fill];


        //// Bezier 12 Drawing
        UIBezierPath* bezier12Path = UIBezierPath.bezierPath;
        [bezier12Path moveToPoint: CGPointMake(135.04, 101)];
        [bezier12Path addCurveToPoint: CGPointMake(142.04, 122) controlPoint1: CGPointMake(134.51, 110.87) controlPoint2: CGPointMake(139.7, 115.01)];
        [bezier12Path addCurveToPoint: CGPointMake(131.04, 128) controlPoint1: CGPointMake(135.11, 120.74) controlPoint2: CGPointMake(132.11, 123.4)];
        [bezier12Path addCurveToPoint: CGPointMake(127.04, 126) controlPoint1: CGPointMake(128.31, 128.73) controlPoint2: CGPointMake(129.03, 126.01)];
        [bezier12Path addCurveToPoint: CGPointMake(122.04, 132) controlPoint1: CGPointMake(124.38, 127) controlPoint2: CGPointMake(123.75, 130.04)];
        [bezier12Path addCurveToPoint: CGPointMake(103.04, 105) controlPoint1: CGPointMake(119.61, 119.11) controlPoint2: CGPointMake(110.37, 113.01)];
        [bezier12Path addCurveToPoint: CGPointMake(135.04, 101) controlPoint1: CGPointMake(114.8, 107.5) controlPoint2: CGPointMake(125.72, 103.89)];
        [bezier12Path closePath];
        bezier12Path.miterLimit = 4;

        bezier12Path.usesEvenOddFillRule = YES;

        [dilloLogoColor setFill];
        [bezier12Path fill];


        //// Bezier 14 Drawing
        UIBezierPath* bezier14Path = UIBezierPath.bezierPath;
        [bezier14Path moveToPoint: CGPointMake(96.04, 104)];
        [bezier14Path addCurveToPoint: CGPointMake(118.04, 133) controlPoint1: CGPointMake(102.53, 114.51) controlPoint2: CGPointMake(118.88, 115.16)];
        [bezier14Path addCurveToPoint: CGPointMake(110.04, 131) controlPoint1: CGPointMake(114.44, 133.27) controlPoint2: CGPointMake(113.22, 131.15)];
        [bezier14Path addCurveToPoint: CGPointMake(109.04, 138) controlPoint1: CGPointMake(107.81, 131.43) controlPoint2: CGPointMake(109.64, 135.93)];
        [bezier14Path addCurveToPoint: CGPointMake(102.04, 134) controlPoint1: CGPointMake(105.76, 137.62) controlPoint2: CGPointMake(104.63, 135.07)];
        [bezier14Path addCurveToPoint: CGPointMake(99.04, 140) controlPoint1: CGPointMake(99.89, 134.85) controlPoint2: CGPointMake(100.43, 138.39)];
        [bezier14Path addCurveToPoint: CGPointMake(74.04, 132) controlPoint1: CGPointMake(92.81, 135.23) controlPoint2: CGPointMake(85.39, 131.65)];
        [bezier14Path addCurveToPoint: CGPointMake(96.04, 104) controlPoint1: CGPointMake(80.85, 122.14) controlPoint2: CGPointMake(90.28, 114.9)];
        [bezier14Path closePath];
        bezier14Path.miterLimit = 4;

        bezier14Path.usesEvenOddFillRule = YES;

        [dilloLogoColor setFill];
        [bezier14Path fill];


        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = UIBezierPath.bezierPath;
        [bezier16Path moveToPoint: CGPointMake(166.04, 110)];
        [bezier16Path addCurveToPoint: CGPointMake(165.04, 130) controlPoint1: CGPointMake(175.22, 114.83) controlPoint2: CGPointMake(167.89, 124.94)];
        [bezier16Path addCurveToPoint: CGPointMake(29.04, 130) controlPoint1: CGPointMake(140.35, 173.97) controlPoint2: CGPointMake(49.35, 187.83)];
        [bezier16Path addCurveToPoint: CGPointMake(68.04, 136) controlPoint1: CGPointMake(39.94, 137.82) controlPoint2: CGPointMake(55.6, 148.42)];
        [bezier16Path addCurveToPoint: CGPointMake(165.04, 110) controlPoint1: CGPointMake(102.65, 156.41) controlPoint2: CGPointMake(149.49, 135.7)];
        [bezier16Path addCurveToPoint: CGPointMake(166.04, 110) controlPoint1: CGPointMake(165.38, 110) controlPoint2: CGPointMake(165.71, 110)];
        [bezier16Path closePath];
        bezier16Path.miterLimit = 4;

        bezier16Path.usesEvenOddFillRule = YES;

        [dilloLogoColor setFill];
        [bezier16Path fill];
    }
}

#pragma mark Generated Images

+ (UIImage*)imageOfDilloLogo
{
    if (_imageOfDilloLogo)
        return _imageOfDilloLogo;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(210, 176), NO, 0.0f);
    [DilloDayStyleKit drawDilloLogo];

    _imageOfDilloLogo = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfDilloLogo;
}

#pragma mark Customization Infrastructure

- (void)setDilloLogoTargets: (NSArray*)dilloLogoTargets
{
    _dilloLogoTargets = dilloLogoTargets;

    for (id target in self.dilloLogoTargets)
        [target setImage: DilloDayStyleKit.imageOfDilloLogo];
}


@end
